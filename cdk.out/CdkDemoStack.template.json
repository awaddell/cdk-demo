{
  "Resources": {
    "TheVPC92636AB0": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "172.16.0.0/21",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "CdkDemoStack/TheVPC"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "CdkDemoStack/TheVPC/Resource"
      }
    },
    "TheVPCIngressSubnet1Subnet66070F45": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "172.16.0.0/24",
        "VpcId": {
          "Ref": "TheVPC92636AB0"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "Name",
            "Value": "CdkDemoStack/TheVPC/IngressSubnet1"
          },
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Ingress"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "CdkDemoStack/TheVPC/IngressSubnet1/Subnet"
      }
    },
    "TheVPCIngressSubnet1RouteTable9A9292FF": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "TheVPC92636AB0"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "CdkDemoStack/TheVPC/IngressSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "CdkDemoStack/TheVPC/IngressSubnet1/RouteTable"
      }
    },
    "TheVPCIngressSubnet1RouteTableAssociationCD3BA914": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "TheVPCIngressSubnet1RouteTable9A9292FF"
        },
        "SubnetId": {
          "Ref": "TheVPCIngressSubnet1Subnet66070F45"
        }
      },
      "Metadata": {
        "aws:cdk:path": "CdkDemoStack/TheVPC/IngressSubnet1/RouteTableAssociation"
      }
    },
    "TheVPCIngressSubnet1DefaultRoute72029544": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "TheVPCIngressSubnet1RouteTable9A9292FF"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "TheVPCIGWFA25CC08"
        }
      },
      "DependsOn": [
        "TheVPCVPCGWC9B93E30"
      ],
      "Metadata": {
        "aws:cdk:path": "CdkDemoStack/TheVPC/IngressSubnet1/DefaultRoute"
      }
    },
    "TheVPCIngressSubnet2Subnet4120652E": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "172.16.1.0/24",
        "VpcId": {
          "Ref": "TheVPC92636AB0"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "Name",
            "Value": "CdkDemoStack/TheVPC/IngressSubnet2"
          },
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Ingress"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "CdkDemoStack/TheVPC/IngressSubnet2/Subnet"
      }
    },
    "TheVPCIngressSubnet2RouteTableFF45F540": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "TheVPC92636AB0"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "CdkDemoStack/TheVPC/IngressSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "CdkDemoStack/TheVPC/IngressSubnet2/RouteTable"
      }
    },
    "TheVPCIngressSubnet2RouteTableAssociation1C8F371A": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "TheVPCIngressSubnet2RouteTableFF45F540"
        },
        "SubnetId": {
          "Ref": "TheVPCIngressSubnet2Subnet4120652E"
        }
      },
      "Metadata": {
        "aws:cdk:path": "CdkDemoStack/TheVPC/IngressSubnet2/RouteTableAssociation"
      }
    },
    "TheVPCIngressSubnet2DefaultRoute8D8F33A1": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "TheVPCIngressSubnet2RouteTableFF45F540"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "TheVPCIGWFA25CC08"
        }
      },
      "DependsOn": [
        "TheVPCVPCGWC9B93E30"
      ],
      "Metadata": {
        "aws:cdk:path": "CdkDemoStack/TheVPC/IngressSubnet2/DefaultRoute"
      }
    },
    "TheVPCApplicationSubnet1SubnetA74226FF": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "172.16.2.0/24",
        "VpcId": {
          "Ref": "TheVPC92636AB0"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "Name",
            "Value": "CdkDemoStack/TheVPC/ApplicationSubnet1"
          },
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Application"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "CdkDemoStack/TheVPC/ApplicationSubnet1/Subnet"
      }
    },
    "TheVPCApplicationSubnet1RouteTable0FE2A3D8": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "TheVPC92636AB0"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "CdkDemoStack/TheVPC/ApplicationSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "CdkDemoStack/TheVPC/ApplicationSubnet1/RouteTable"
      }
    },
    "TheVPCApplicationSubnet1RouteTableAssociationBE311466": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "TheVPCApplicationSubnet1RouteTable0FE2A3D8"
        },
        "SubnetId": {
          "Ref": "TheVPCApplicationSubnet1SubnetA74226FF"
        }
      },
      "Metadata": {
        "aws:cdk:path": "CdkDemoStack/TheVPC/ApplicationSubnet1/RouteTableAssociation"
      }
    },
    "TheVPCApplicationSubnet2SubnetB128A643": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "172.16.3.0/24",
        "VpcId": {
          "Ref": "TheVPC92636AB0"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "Name",
            "Value": "CdkDemoStack/TheVPC/ApplicationSubnet2"
          },
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Application"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "CdkDemoStack/TheVPC/ApplicationSubnet2/Subnet"
      }
    },
    "TheVPCApplicationSubnet2RouteTable1BDD08F1": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "TheVPC92636AB0"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "CdkDemoStack/TheVPC/ApplicationSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "CdkDemoStack/TheVPC/ApplicationSubnet2/RouteTable"
      }
    },
    "TheVPCApplicationSubnet2RouteTableAssociationDC7A6280": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "TheVPCApplicationSubnet2RouteTable1BDD08F1"
        },
        "SubnetId": {
          "Ref": "TheVPCApplicationSubnet2SubnetB128A643"
        }
      },
      "Metadata": {
        "aws:cdk:path": "CdkDemoStack/TheVPC/ApplicationSubnet2/RouteTableAssociation"
      }
    },
    "TheVPCDatabaseSubnet1SubnetEEBC6928": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "172.16.4.0/28",
        "VpcId": {
          "Ref": "TheVPC92636AB0"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "Name",
            "Value": "CdkDemoStack/TheVPC/DatabaseSubnet1"
          },
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Database"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "CdkDemoStack/TheVPC/DatabaseSubnet1/Subnet"
      }
    },
    "TheVPCDatabaseSubnet1RouteTable32981919": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "TheVPC92636AB0"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "CdkDemoStack/TheVPC/DatabaseSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "CdkDemoStack/TheVPC/DatabaseSubnet1/RouteTable"
      }
    },
    "TheVPCDatabaseSubnet1RouteTableAssociation8D6DBC8A": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "TheVPCDatabaseSubnet1RouteTable32981919"
        },
        "SubnetId": {
          "Ref": "TheVPCDatabaseSubnet1SubnetEEBC6928"
        }
      },
      "Metadata": {
        "aws:cdk:path": "CdkDemoStack/TheVPC/DatabaseSubnet1/RouteTableAssociation"
      }
    },
    "TheVPCDatabaseSubnet2Subnet54D0B03D": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "172.16.4.16/28",
        "VpcId": {
          "Ref": "TheVPC92636AB0"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "Name",
            "Value": "CdkDemoStack/TheVPC/DatabaseSubnet2"
          },
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Database"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "CdkDemoStack/TheVPC/DatabaseSubnet2/Subnet"
      }
    },
    "TheVPCDatabaseSubnet2RouteTableABF784A1": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "TheVPC92636AB0"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "CdkDemoStack/TheVPC/DatabaseSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "CdkDemoStack/TheVPC/DatabaseSubnet2/RouteTable"
      }
    },
    "TheVPCDatabaseSubnet2RouteTableAssociationECBC8FDD": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "TheVPCDatabaseSubnet2RouteTableABF784A1"
        },
        "SubnetId": {
          "Ref": "TheVPCDatabaseSubnet2Subnet54D0B03D"
        }
      },
      "Metadata": {
        "aws:cdk:path": "CdkDemoStack/TheVPC/DatabaseSubnet2/RouteTableAssociation"
      }
    },
    "TheVPCIGWFA25CC08": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "CdkDemoStack/TheVPC"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "CdkDemoStack/TheVPC/IGW"
      }
    },
    "TheVPCVPCGWC9B93E30": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "TheVPC92636AB0"
        },
        "InternetGatewayId": {
          "Ref": "TheVPCIGWFA25CC08"
        }
      },
      "Metadata": {
        "aws:cdk:path": "CdkDemoStack/TheVPC/VPCGW"
      }
    },
    "ASGInstanceSecurityGroup0525485D": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "CdkDemoStack/ASG/InstanceSecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "SecurityGroupIngress": [],
        "Tags": [
          {
            "Key": "Name",
            "Value": "CdkDemoStack/ASG"
          }
        ],
        "VpcId": {
          "Ref": "TheVPC92636AB0"
        }
      },
      "Metadata": {
        "aws:cdk:path": "CdkDemoStack/ASG/InstanceSecurityGroup/Resource"
      }
    },
    "ASGInstanceSecurityGroupfromCdkDemoStackLBSecurityGroup13F73D2F80BA357D56": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "tcp",
        "Description": "Load balancer to target",
        "FromPort": 80,
        "GroupId": {
          "Fn::GetAtt": [
            "ASGInstanceSecurityGroup0525485D",
            "GroupId"
          ]
        },
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "LBSecurityGroup8A41EA2B",
            "GroupId"
          ]
        },
        "ToPort": 80
      },
      "Metadata": {
        "aws:cdk:path": "CdkDemoStack/ASG/InstanceSecurityGroup/from CdkDemoStackLBSecurityGroup13F73D2F:80"
      }
    },
    "ASGInstanceRoleE263A41B": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ec2.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "CdkDemoStack/ASG/InstanceRole/Resource"
      }
    },
    "ASGInstanceProfile0A2834D7": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Roles": [
          {
            "Ref": "ASGInstanceRoleE263A41B"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "CdkDemoStack/ASG/InstanceProfile"
      }
    },
    "ASGLaunchConfigC00AF12B": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Properties": {
        "ImageId": "ami-03efe20853d0a91d5",
        "InstanceType": "t2.micro",
        "IamInstanceProfile": {
          "Ref": "ASGInstanceProfile0A2834D7"
        },
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "ASGInstanceSecurityGroup0525485D",
              "GroupId"
            ]
          }
        ],
        "UserData": {
          "Fn::Base64": "#!/bin/bash\n\n    Content-Type: multipart/mixed; boundary=\"//\"\n    MIME-Version: 1.0\n    \n    --//\n    Content-Type: text/cloud-config; charset=\"us-ascii\"\n    MIME-Version: 1.0\n    Content-Transfer-Encoding: 7bit\n    Content-Disposition: attachment; filename=\"cloud-config.txt\"\n    \n    #cloud-config\n    cloud_final_modules:\n    - [scripts-user, always]\n    \n    --//\n    Content-Type: text/x-shellscript; charset=\"us-ascii\"\n    MIME-Version: 1.0\n    Content-Transfer-Encoding: 7bit\n    Content-Disposition: attachment; filename=\"userdata.txt\"\n    \n    #!/bin/bash\n    /bin/echo \"Hello World\" > /opt/bitnami/nginx/html/index.html \n\n    --//\n    "
        }
      },
      "DependsOn": [
        "ASGInstanceRoleE263A41B"
      ],
      "Metadata": {
        "aws:cdk:path": "CdkDemoStack/ASG/LaunchConfig"
      }
    },
    "ASG46ED3070": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "Properties": {
        "MaxSize": "1",
        "MinSize": "1",
        "DesiredCapacity": "1",
        "LaunchConfigurationName": {
          "Ref": "ASGLaunchConfigC00AF12B"
        },
        "Tags": [
          {
            "Key": "Name",
            "PropagateAtLaunch": true,
            "Value": "CdkDemoStack/ASG"
          }
        ],
        "TargetGroupARNs": [
          {
            "Ref": "LBListenerTargetGroupF04FCF6D"
          }
        ],
        "VPCZoneIdentifier": [
          {
            "Ref": "TheVPCApplicationSubnet1SubnetA74226FF"
          },
          {
            "Ref": "TheVPCApplicationSubnet2SubnetB128A643"
          }
        ]
      },
      "UpdatePolicy": {
        "AutoScalingScheduledAction": {
          "IgnoreUnmodifiedGroupSizeProperties": true
        }
      },
      "Metadata": {
        "aws:cdk:path": "CdkDemoStack/ASG/ASG"
      }
    },
    "ASGScalingPolicyAModestLoadC5714E5A": {
      "Type": "AWS::AutoScaling::ScalingPolicy",
      "Properties": {
        "AutoScalingGroupName": {
          "Ref": "ASG46ED3070"
        },
        "PolicyType": "TargetTrackingScaling",
        "TargetTrackingConfiguration": {
          "PredefinedMetricSpecification": {
            "PredefinedMetricType": "ALBRequestCountPerTarget",
            "ResourceLabel": {
              "Fn::Join": [
                "",
                [
                  {
                    "Fn::Select": [
                      1,
                      {
                        "Fn::Split": [
                          "/",
                          {
                            "Ref": "LBListener49E825B4"
                          }
                        ]
                      }
                    ]
                  },
                  "/",
                  {
                    "Fn::Select": [
                      2,
                      {
                        "Fn::Split": [
                          "/",
                          {
                            "Ref": "LBListener49E825B4"
                          }
                        ]
                      }
                    ]
                  },
                  "/",
                  {
                    "Fn::Select": [
                      3,
                      {
                        "Fn::Split": [
                          "/",
                          {
                            "Ref": "LBListener49E825B4"
                          }
                        ]
                      }
                    ]
                  },
                  "/",
                  {
                    "Fn::GetAtt": [
                      "LBListenerTargetGroupF04FCF6D",
                      "TargetGroupFullName"
                    ]
                  }
                ]
              ]
            }
          },
          "TargetValue": 1
        }
      },
      "DependsOn": [
        "LBListener49E825B4",
        "LBListenerTargetGroupF04FCF6D"
      ],
      "Metadata": {
        "aws:cdk:path": "CdkDemoStack/ASG/ScalingPolicyAModestLoad/Resource"
      }
    },
    "LB8A12904C": {
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
      "Properties": {
        "LoadBalancerAttributes": [],
        "Scheme": "internet-facing",
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "LBSecurityGroup8A41EA2B",
              "GroupId"
            ]
          }
        ],
        "Subnets": [
          {
            "Ref": "TheVPCIngressSubnet1Subnet66070F45"
          },
          {
            "Ref": "TheVPCIngressSubnet2Subnet4120652E"
          }
        ],
        "Type": "application"
      },
      "DependsOn": [
        "TheVPCIngressSubnet1DefaultRoute72029544",
        "TheVPCIngressSubnet2DefaultRoute8D8F33A1"
      ],
      "Metadata": {
        "aws:cdk:path": "CdkDemoStack/LB/Resource"
      }
    },
    "LBSecurityGroup8A41EA2B": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Automatically created Security Group for ELB CdkDemoStackLB138448E1",
        "SecurityGroupEgress": [],
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow from anyone on port 80",
            "FromPort": 80,
            "IpProtocol": "tcp",
            "ToPort": 80
          }
        ],
        "VpcId": {
          "Ref": "TheVPC92636AB0"
        }
      },
      "Metadata": {
        "aws:cdk:path": "CdkDemoStack/LB/SecurityGroup/Resource"
      }
    },
    "LBSecurityGrouptoCdkDemoStackASGInstanceSecurityGroup46A653D880C1BC04A0": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Fn::GetAtt": [
            "LBSecurityGroup8A41EA2B",
            "GroupId"
          ]
        },
        "IpProtocol": "tcp",
        "Description": "Load balancer to target",
        "DestinationSecurityGroupId": {
          "Fn::GetAtt": [
            "ASGInstanceSecurityGroup0525485D",
            "GroupId"
          ]
        },
        "FromPort": 80,
        "ToPort": 80
      },
      "Metadata": {
        "aws:cdk:path": "CdkDemoStack/LB/SecurityGroup/to CdkDemoStackASGInstanceSecurityGroup46A653D8:80"
      }
    },
    "LBListener49E825B4": {
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
      "Properties": {
        "DefaultActions": [
          {
            "TargetGroupArn": {
              "Ref": "LBListenerTargetGroupF04FCF6D"
            },
            "Type": "forward"
          }
        ],
        "LoadBalancerArn": {
          "Ref": "LB8A12904C"
        },
        "Port": 80,
        "Protocol": "HTTP",
        "Certificates": []
      },
      "Metadata": {
        "aws:cdk:path": "CdkDemoStack/LB/Listener/Resource"
      }
    },
    "LBListenerTargetGroupF04FCF6D": {
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
      "Properties": {
        "Port": 80,
        "Protocol": "HTTP",
        "TargetGroupAttributes": [],
        "Targets": [],
        "TargetType": "instance",
        "VpcId": {
          "Ref": "TheVPC92636AB0"
        }
      },
      "Metadata": {
        "aws:cdk:path": "CdkDemoStack/LB/Listener/TargetGroup/Resource"
      }
    }
  }
}